{"ast":null,"code":"import { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class WgerService {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = '07d7138492a2995c674e22113c9bd419b11e8a9b';\n    this.apiUrl = 'https://wger.de/api/v2/';\n  }\n  getExercises() {\n    const apiKey = this.apiKey;\n    const apiUrl = this.apiUrl + 'exerciseimage/?language=4';\n    return this.http.get(apiUrl, {\n      headers: {\n        'Authorization': `Token ${apiKey}`\n      }\n    });\n  }\n  getImagesEjercicios(id) {\n    const url = `${this.apiUrl}/exerciseimage/?exercise=${id}`;\n    const apiKey = this.apiKey;\n    return this.http.get(url, {\n      headers: {\n        'Authorization': `Token ${apiKey}`\n      }\n    }).pipe(map(response => {\n      // Filtrar las imágenes según el id del ejercicio\n      return response.results.filter(imagen => imagen.exercise === id);\n    }));\n  }\n  getRutinas() {\n    const url = `${this.apiUrl}/workout`;\n    const headers = {\n      'Authorization': `Token ${this.apiKey}`\n    };\n    return this.http.get(url, {\n      headers\n    });\n  }\n}\nWgerService.ɵfac = function WgerService_Factory(t) {\n  return new (t || WgerService)(i0.ɵɵinject(i1.HttpClient));\n};\nWgerService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: WgerService,\n  factory: WgerService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AAGA,SAASA,GAAG,QAAQ,gBAAgB;;;AAKpC,OAAM,MAAOC,WAAW;EAEtBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAExB,WAAM,GAAG,0CAA0C;IACnD,WAAM,GAAG,yBAAyB;EAHK;EAKvCC,YAAY;IACV,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,MAAMC,MAAM,GAAG,IAAI,CAACA,MAAM,GAAG,2BAA2B;IAExD,OAAO,IAAI,CAACH,IAAI,CAACI,GAAG,CAACD,MAAM,EAAE;MAC3BE,OAAO,EAAE;QACP,eAAe,EAAE,SAASH,MAAM;;KAEnC,CAAC;EACJ;EAEAI,mBAAmB,CAACC,EAAU;IAC5B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,4BAA4BI,EAAE,EAAE;IAC1D,MAAML,MAAM,GAAG,IAAI,CAACA,MAAM;IAC1B,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAACI,GAAG,EAAE;MACxBH,OAAO,EAAE;QACP,eAAe,EAAE,SAASH,MAAM;;KAEnC,CAAC,CAACO,IAAI,CACLZ,GAAG,CAAEa,QAAa,IAAI;MACpB;MACA,OAAOA,QAAQ,CAACC,OAAO,CAACC,MAAM,CAAEC,MAAW,IAAKA,MAAM,CAACC,QAAQ,KAAKP,EAAE,CAAC;IACzE,CAAC,CAAC,CACH;EACH;EAGAQ,UAAU;IACR,MAAMP,GAAG,GAAG,GAAG,IAAI,CAACL,MAAM,UAAU;IACpC,MAAME,OAAO,GAAG;MACd,eAAe,EAAE,SAAS,IAAI,CAACH,MAAM;KACtC;IAED,OAAO,IAAI,CAACF,IAAI,CAACI,GAAG,CAACI,GAAG,EAAE;MAAEH;IAAO,CAAE,CAAC;EACxC;;AAzCWP,WAAW;mBAAXA,WAAW;AAAA;AAAXA,WAAW;SAAXA,WAAW;EAAAkB,SAAXlB,WAAW;EAAAmB,YAFV;AAAM","names":["map","WgerService","constructor","http","getExercises","apiKey","apiUrl","get","headers","getImagesEjercicios","id","url","pipe","response","results","filter","imagen","exercise","getRutinas","factory","providedIn"],"sourceRoot":"","sources":["D:\\1.Universidad\\DRA\\PruebaGym\\my-gym\\src\\app\\wger.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class WgerService {\n\n  constructor(private http: HttpClient) {}\n\n  apiKey = '07d7138492a2995c674e22113c9bd419b11e8a9b';\n  apiUrl = 'https://wger.de/api/v2/';\n\n  getExercises(): Observable<any>{\n    const apiKey = this.apiKey;\n    const apiUrl = this.apiUrl + 'exerciseimage/?language=4';\n\n    return this.http.get(apiUrl, {\n      headers: {\n        'Authorization': `Token ${apiKey}`\n      }\n    });\n  }\n\n  getImagesEjercicios(id: number): Observable<any> {\n    const url = `${this.apiUrl}/exerciseimage/?exercise=${id}`;\n    const apiKey = this.apiKey;\n    return this.http.get(url, {\n      headers: {\n        'Authorization': `Token ${apiKey}`\n      }\n    }).pipe(\n      map((response: any) => {\n        // Filtrar las imágenes según el id del ejercicio\n        return response.results.filter((imagen: any) => imagen.exercise === id);\n      })\n    );\n  }\n\n\n  getRutinas(): Observable<any> {\n    const url = `${this.apiUrl}/workout`;\n    const headers = {\n      'Authorization': `Token ${this.apiKey}`\n    };\n\n    return this.http.get(url, { headers });\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}